---
argument_specs:
  main:
    author:
      - Herv√© Quatremain <rv4m@yahoo.co.uk>
    short_description:
      Create and configure a Quay Container Registry organization
    description:
      - Create an organization and configure it with robot accounts, teams,
        default permissions, OAuth applications, and repositories.
    options:
      quay_host:
        description:
          - URL for accessing the API. U(https://quay.example.com:8443) for
            example.
          - If you do not set the parameter, then the role uses the
            C(QUAY_HOST) environment variable.
          - If you do no set the environment variable either, then the role
            uses the U(http://127.0.0.1) URL.
        type: str
        default: http://127.0.0.1
      quay_validate_certs:
        description:
          - Whether to allow insecure connections to the API.
          - If C(no), then the role does not validate SSL certificates.
          - If you do not set the parameter, then the role tries the
            C(QUAY_VERIFY_SSL) environment variable (C(yes), C(1), and C(True)
            mean yes, and C(no), C(0), C(False), and no value mean no).
        type: bool
        default: true
      quay_token:
        description:
          - OAuth access token for authenticating against the API.
          - If you do not set the parameter, then the role tries the
            C(QUAY_TOKEN) environment variable.
          - Mutually exclusive with I(quay_username) and I(quay_password).
        type: str
      quay_username:
        description:
          - The username to use for authenticating against the API.
          - If you do not set the parameter, then the role tries the
            C(QUAY_USERNAME) environment variable.
          - If you set I(quay_username), then you also need to set
            I(quay_password).
          - Mutually exclusive with I(quay_token).
        type: str
      quay_password:
        description:
          - The password to use for authenticating against the API.
          - If you do not set the parameter, then the role tries the
            C(QUAY_PASSWORD) environment variable.
          - If you set I(quay_password), then you also need to set
            I(quay_username).
          - Mutually exclusive with I(quay_token).
        type: str
      quay_org_name:
        description:
          - Name of the organization to create.
          - The name must be in lowercase and must not contain white spaces.
            For compatibility with earlier versions of Docker, the name must
            be at least four characters long.
        required: true
        type: str
      quay_org_email:
        description:
          - Email address to associate with the new organization.
          - If your Quay administrator has enabled the mailing capability of
            your Quay installation (C(FEATURE_MAILING) to C(true) in
            C(config.yaml)), then this I(email) parameter is mandatory.
          - You cannot use the same address as your account email.
        type: str
      quay_org_quota:
        description:
          - Quota that Quay uses to compute the warning and reject limits for
            the organization.
          - You specify a quota in bytes, but you can also use the K[i]B,
             M[i]B, G[i]B, or T[i]B suffixes.
        type: str
      quay_org_warning_pct:
        description:
          - Warning (soft) limit as a percentage of the quota.
          - Quay notifies the users when the limit is reached.
          - Set I(quay_org_warning_pct) to C(0) to remove the warning limit.
        type: int
      quay_org_reject_pct:
        description:
          - Reject (hard) limit as a percentage of the quota.
          - Quay terminates any image push in the organization when the limit
            is reached.
          - Set I(quay_org_reject_pct) to C(0) to remove the reject limit.
        type: int
      quay_org_users:
        description:
          - List of user account to create.
        type: list
        elements: dict
        options:
          username:
            description:
              - Name of the user account to create.
            required: true
            type: str
          email:
            description:
              - User's email address.
              - If your Quay administrator has enabled the mailing capability
                of your Quay installation (C(FEATURE_MAILING) to C(true) in
                C(config.yaml)), then this I(email) parameter is mandatory.
            type: str
          password:
            description:
              - User's password as a clear string.
              - The password must be at least eight characters long and must
                not contain white spaces.
            type: str
      quay_org_robots:
        description:
          - List of robot accounts to create for the organization.
        type: list
        elements: dict
        options:
          name:
            description:
              - Name of the robot account to create. Because the role creates
                the robot account in the organization it manages, you do not
                need to use the format C(organization)+C(shortname), although
                the role accepts that format. You can simply specify the robot
                account name without the C(organization)+ prefix.
              - The name must be in lowercase, must not contain white spaces,
                must not start by a digit, and must be at least two characters
                long.
            required: true
            type: str
          description:
            description:
              - Description of the robot account. You cannot update the
                description of existing robot accounts.
            type: str
      quay_org_teams:
        description:
          - List of teams to create in the organization.
        type: list
        elements: dict
        options:
          name:
            description:
              - Name of the team to create.
              - The name must be in lowercase, must not contain white spaces,
                must not start by a digit, and must be at least two characters
                long.
            required: true
            type: str
          role:
            description:
              - Role of the team within the organization. If not set, then the
                new team has the C(member) role.
            type: str
            choices: [member, creator, admin]
          description:
            description:
              - Text in Markdown format that describes the team.
            type: str
          members:
            description:
              - List of the user or robot accounts in the team. Use the syntax
                C(organization)+C(robotshortname) for robot accounts.
              - If the team is synchronized with an LDAP group (see the
                M(quay_team_ldap) module), then you can only add or remove
                robot accounts.
            type: list
            elements: str
      quay_org_default_perms:
        description:
          - Create default repository permissions for the organization.
          - The permissions you define with this parameter apply when a
            user creates a new repository in the organization.
        type: list
        elements: dict
        options:
          name:
            description:
              - Name of the user or team that gets permission to new created
                repositories in the organization.
              - For robot accounts use the C(organization)+C(shortrobotname)
                format.
            required: true
            type: str
          type:
            description:
              - Type of the account defined in I(name). Choose C(user)
                for both user and robot accounts.
            type: str
            choices: [user, team]
            default: user
          role:
            description:
              - Permission that Quay automatically grants to the user or team
                on new created repositories in the organization.
              - If you do not provide that parameter, then the role uses
                C(read) by default.
            type: str
            choices: [read, write, admin]
          creator:
            description:
              - Quay applies the default permission only when repositories are
                created by the user that you define in I(creator).
              - By default, if you do not provide that I(creator) parameter,
                then Quay applies the default permission to all new
                repositories, whoever creates them.
              - You cannot use robot accounts or teams for the I(creator)
                parameter. You can only use regular user accounts.
            type: str
      quay_org_applications:
        description:
          - Create applications in the organization.
        type: list
        elements: dict
        options:
          name:
            description:
              - Name of the application to create in the organization.
                Application names must be at least two characters long.
            required: true
            type: str
          description:
            description:
              - Description for the application.
            type: str
          application_uri:
            description:
              - URL to the application home page.
            type: str
          redirect_uri:
            description:
              - Prefix of the application's OAuth redirection/callback URLs.
            type: str
          avatar_email:
            description:
              - Email address that represents the avatar for the application.
            type: str
      quay_org_repositories:
        description:
          - Create repositories in the organization.
        type: list
        elements: dict
        options:
          name:
            description:
              - Name of the repository to create in the organization. The name
                must be in lowercase and must not contain white spaces.
            required: true
            type: str
          visibility:
            description:
              - If C(public), then anyone can pull images from the repository.
              - If C(private), then nobody can access the repository and you
                need to explicitly grant access to users, robots, and teams.
              - If you do not set the parameter when you create a repository,
                then it defaults to C(private).
            type: str
            choices: [public, private]
          description:
            description:
              - Text in Markdown format that describes the repository.
            type: str
          perms:
            description:
              - User, robot, and team permissions to associate with the
                repository.
            type: list
            elements: dict
            options:
              type:
                description:
                  - Specifies the type of the account. Choose C(user) for both
                    user and robot accounts.
                type: str
                choices: [user, team]
                default: user
              name:
                description:
                  - Name of the account. The format for robot accounts is
                    C(organization)+C(shortrobotname).
                required: true
                type: str
              role:
                description:
                  - Type of permission to grant.
                type: str
                choices: [read, write, admin]
                default: read
          repo_state:
            description:
              - If C(NORMAL), then the repository is in the default state
                (read/write).
              - If C(READ_ONLY), then the repository is read-only.
              - If C(MIRROR), then the repository is a mirror and you can
                configure it by using the M(quay_repository_mirror) module.
              - You must enable the mirroring capability of your Quay
                installation to use this I(repo_state) parameter.
            type: str
            choices: [NORMAL, READ_ONLY, MIRROR]
...
