---
# Supporting repository
- name: Ensure repository ansibletestrepo exists
  herve4m.quay.quay_repository:
    name: ansibletestorg/ansibletestrepo
    visibility: private
    perms:
      - name: ansibletestuser1
        type: user
        role: write
      - name: ansibletestteam1
        type: team
        role: admin
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false

- name: ERROR EXPECTED Ensure notification exists (but repo does not exist)
  herve4m.quay.quay_notification:
    repository: myansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: quay_notification
    config:
      name: ansibletestteam1
      type: team
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (no such repository)

- name: ERROR EXPECTED Non-existing repository (anonymous)
  herve4m.quay.quay_notification:
    repository: myansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: quay_notification
    config:
      name: ansibletestteam1
      type: team
    state: present
    quay_host: quay.io
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (no such repository)

- name: ERROR EXPECTED Missing required parameters
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (missing parameters)

- name: Ensure notification of type Quay Notification exists
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: quay_notification
    config:
      name: ansibletestteam1
      type: team
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false

- name: Ensure notification of type Quay Notification exists (no change)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: quay_notification
    config:
      name: ansibletestteam1
      type: team
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure notification of type Slack exists (+test)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Slack Notification
    event: repo_push
    method: slack
    config:
      url: https://hooks.slack.com/services/XXX/YYY/ZZZ
    test: true
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false

- name: Ensure another notification of type Slack exists (+test)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Slack Notification2
    event: repo_push
    method: slack
    config:
      url: https://hooks.slack.com/services/AAA/BBB/CCC
    test: true
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false

- name: Ensure a repo_image_expiry notification (10 days) of type Slack exists
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Slack Notification3
    event: repo_image_expiry
    image_expiry_days: 10
    method: slack
    config:
      url: https://hooks.slack.com/services/XXX/YYY/ZZZ
    test: false
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false

- name: Ensure a repo_image_expiry notification (default) of type Slack exists
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Slack Notification4
    event: repo_image_expiry
    method: slack
    config:
      url: https://hooks.slack.com/services/XXX/YYY/ZZZ
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false

- name: Wait to ensure the tests have failed
  ansible.builtin.pause:
    seconds: 15

- name: Ensure failure counter is reset for Quay Notification (no change)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    reset_failcount: true
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure failure counter is reset for all Slack notifications
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    regex: "[Ss]lack\\s"
    reset_failcount: true
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false

- name: Ensure non-existing notification is removed - method (no change)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    method: hipchat
    reset_failcount: true
    state: absent
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure non-existing notification is removed - event (no change)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    event: build_start
    reset_failcount: true
    state: absent
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Non-existing organization and state=absent (no change)
  herve4m.quay.quay_notification:
    repository: nonexisting/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: quay_notification
    config:
      name: ansibletestteam1
      type: team
    state: absent
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: ERROR EXPECTED Non-existing organization
  herve4m.quay.quay_notification:
    repository: nonexisting/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: quay_notification
    config:
      name: ansibletestteam1
      type: team
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (non-existing organization)

- name: ERROR EXPECTED Missing parameter for notification (1)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: email
    config: {}
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (missing parameter)

- name: ERROR EXPECTED Missing parameter for notification (2)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: flowdock
    config: {}
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (missing parameter)

- name: ERROR EXPECTED Missing parameter for notification (3)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: hipchat
    config: {}
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (missing parameter)

- name: ERROR EXPECTED Missing parameter for notification (4)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: slack
    config: {}
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (missing parameter)

- name: ERROR EXPECTED Missing parameter for notification (5)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: webhook
    config: {}
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (missing parameter)

- name: ERROR EXPECTED Missing parameter for notification (6)
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: quay_notification
    config: {}
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (missing parameter)

- name: ERROR EXPECTED Non-existing user
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: quay_notification
    config:
      name: nonexistinguser
      type: user
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (non-existing user)

- name: ERROR EXPECTED Non-existing team
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: quay_notification
    config:
      name: nonexistingteam
      type: team
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (non-existing team)

- name: ERROR EXPECTED Non-existing organization
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: quay_notification
    config:
      name: nonexistingorg
      type: org
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (non-existing organization)

- name: ERROR EXPECTED Robot account not allowed
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    title: Test Quay Notification
    event: repo_push
    method: quay_notification
    config:
      name: ansibletestorg+ansibletestrobot1
      type: user
    state: present
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (robot account)

- name: Ensure Quay Notification is removed
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    search_string: Quay Notification
    reset_failcount: true
    state: absent
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false

- name: Ensure the Slack notifications are removed
  herve4m.quay.quay_notification:
    repository: ansibletestorg/ansibletestrepo
    method: slack
    state: absent
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false

- name: Ensure the repository is removed
  herve4m.quay.quay_repository:
    name: ansibletestorg/ansibletestrepo
    state: absent
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
...
